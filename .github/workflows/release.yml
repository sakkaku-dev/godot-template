name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.4.4
    strategy:
      matrix:
        # Remove channel if not releasing (Available: win, linux, mac, web, android)
        channel: [win, linux]
    env:
      GAME: ##VAR_GAME_NAME
      CHANNEL: ${{matrix.channel}}
      GODOT_VERSION: 3.4.4
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Setup Templates
        run: ./scripts/ci/prepare-templates.sh

      - name: Prepare android release
        env:
          ANDROID_KEYSTORE: ${{secrets.ANDROID_RELEASE_KEYSTORE}}
          ANDROID_KEYSTORE_USER: ${{secrets.ANDROID_RELEASE_KEYSTORE_USER}}
          ANDROID_KEYSTORE_PW: ${{secrets.ANDROID_RELEASE_KEYSTORE_PW}}
        if: |
          env.CHANNEL == 'android' &&
          env.ANDROID_KEYSTORE &&
          env.ANDROID_KEYSTORE_USER &&
          env.ANDROID_KEYSTORE_PW
        run: |
          echo $ANDROID_KEYSTORE | base64 --decode > ./release.keystore
          sed 's@keystore/release=".*"@keystore/release="'./release.keystore'"@g' -i export_presets.cfg
          sed 's@keystore/release_user=".*"@keystore/release_user="'$ANDROID_KEYSTORE_USER'"@g' -i export_presets.cfg
          sed 's@keystore/release_password=".*"@keystore/release_password="'$ANDROID_KEYSTORE_PW'"@g' -i export_presets.cfg

      - name: Prepare Build
        run: ./addons/debug/prepare-build.sh $GITHUB_REF_NAME

      - name: Build
        run: ./scripts/ci/build-channel.sh $CHANNEL

      - name: Publish Itch
        if: env.BUTLER_API_KEY && env.USER && env.GAME && !contains(github.ref, '-rc')
        shell: bash
        env:
          BUTLER_API_KEY: ${{secrets.BUTLER_API_KEY}}
          USER: ${{secrets.ITCHIO_USER}}
        run: butler push build/$CHANNEL $USER/$GAME:$CHANNEL --userversion $GITHUB_REF_NAME

      - name: Package builds
        if: |
          env.CHANNEL != 'android' &&
          env.CHANNEL != 'mac'
        run: |
          cd build
          mv $CHANNEL $GAME && zip -r $GAME-$CHANNEL.zip $GAME

      # Upload exported build
      - name: Upload artifacts
        if: env.CHANNEL != 'android'
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: build/**/*.zip

      - name: Upload android
        if: env.CHANNEL == 'android'
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: build/**/*.aab

  github-release:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: release
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false
          files: |
            **/*.zip
            **/*.aab
