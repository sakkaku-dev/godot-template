name: CI

on:
  workflow_dispatch: {}
  # push:
  #   branches: [master]

jobs:
  tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.2.3
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Unit Test
        run: godot -s addons/gut/gut_cmdln.gd
  export-windows:
    name: Windows Export
    runs-on: ubuntu-latest
    needs: tests
    container:
      image: barichello/godot-ci:3.2.3
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Export
        run: |
          mkdir -v -p build/win
          godot -v --export "Windows" ./build/win/main.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: export-win
          path: build/win
  export-linux:
    name: Linux Export
    runs-on: ubuntu-latest
    needs: tests
    container:
      image: barichello/godot-ci:3.2.3
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Export
        run: |
          mkdir -v -p build/linux
          godot -v --export "Linux" ./build/linux/main.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: export-linux
          path: build/linux
  export-web:
    name: Web Export
    runs-on: ubuntu-latest
    needs: tests
    container:
      image: barichello/godot-ci:3.2.3
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Export
        run: |
          mkdir -v -p build/web
          godot -v --export "HTML5" ./build/web/index.html
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: export-web
          path: build/web
  publish-gh:
    name: Publish Github Pages
    runs-on: ubuntu-latest
    needs: export-web
    if: github.ref == 'refs/heads/master'
    steps:
      # Checkout step needed for deploying
      - name: Checkout
        uses: actions/checkout@v1
      - name: Download export-web artifact
        uses: actions/download-artifact@v2
        with:
          name: export-web
          path: build/web
      # Installing rsync is needed in order to deploy to GitHub Pages. Without it, the build will fail.
      - name: Install rsync ðŸ“š
        run: sudo apt-get update && sudo apt-get install -y rsync
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: build/web # The folder the action should deploy.
